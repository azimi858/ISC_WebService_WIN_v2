//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace identifier.IdentifierServiceTest {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class PasswordIsNotStrongException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class isVerhoeffRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal amountField;
        
        private bool amountFieldSpecified;
        
        private string identifierCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
                this.RaisePropertyChanged("amountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string identifierCode {
            get {
                return this.identifierCodeField;
            }
            set {
                this.identifierCodeField = value;
                this.RaisePropertyChanged("identifierCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class credential : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string passwordField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class UnableToAuthenticateException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidIdentifierException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidCredentialException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class UserTemporarilySuspendedException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidAllotmentItemInfoException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class UnableToGenerateIdentifierException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidDateException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidIdentifierCodeException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidAmountException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class InvalidAccountNumberException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class IdentifierIsExistException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class IdentifierNotFoundException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="com.misc.bis.behdad.service", ConfigurationName="IdentifierServiceTest.IdentifierService")]
    public interface IdentifierService {
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidIdentifierException), Action="", Name="InvalidIdentifierException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        identifier.IdentifierServiceTest.isVerhoeffResponse isVerhoeff(identifier.IdentifierServiceTest.isVerhoeff request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isVerhoeffResponse> isVerhoeffAsync(identifier.IdentifierServiceTest.isVerhoeff request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        identifier.IdentifierServiceTest.addIdentifiersResponse addIdentifiers(identifier.IdentifierServiceTest.addIdentifiers request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.addIdentifiersResponse> addIdentifiersAsync(identifier.IdentifierServiceTest.addIdentifiers request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidAllotmentItemInfoException), Action="", Name="InvalidAllotmentItemInfoException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToGenerateIdentifierException), Action="", Name="UnableToGenerateIdentifierException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        identifier.IdentifierServiceTest.generateIdentifierResponse generateIdentifier(identifier.IdentifierServiceTest.generateIdentifier request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.generateIdentifierResponse> generateIdentifierAsync(identifier.IdentifierServiceTest.generateIdentifier request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        identifier.IdentifierServiceTest.removeIdentifiersResponse removeIdentifiers(identifier.IdentifierServiceTest.removeIdentifiers request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.removeIdentifiersResponse> removeIdentifiersAsync(identifier.IdentifierServiceTest.removeIdentifiers request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        identifier.IdentifierServiceTest.getActiveIdentifiersResponse getActiveIdentifiers(identifier.IdentifierServiceTest.getActiveIdentifiers request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.getActiveIdentifiersResponse> getActiveIdentifiersAsync(identifier.IdentifierServiceTest.getActiveIdentifiers request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        identifier.IdentifierServiceTest.isValidIdentifierResponse isValidIdentifier(identifier.IdentifierServiceTest.isValidIdentifier request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isValidIdentifierResponse> isValidIdentifierAsync(identifier.IdentifierServiceTest.isValidIdentifier request);
        
        // CODEGEN: Parameter 'credential' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidDateException), Action="", Name="InvalidDateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidIdentifierCodeException), Action="", Name="InvalidIdentifierCodeException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidAmountException), Action="", Name="InvalidAmountException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidAccountNumberException), Action="", Name="InvalidAccountNumberException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.IdentifierIsExistException), Action="", Name="IdentifierIsExistException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        identifier.IdentifierServiceTest.addIdentifierResponse addIdentifier(identifier.IdentifierServiceTest.addIdentifier request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.addIdentifierResponse> addIdentifierAsync(identifier.IdentifierServiceTest.addIdentifier request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidAllotmentItemInfoException), Action="", Name="InvalidAllotmentItemInfoException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToGenerateIdentifierException), Action="", Name="UnableToGenerateIdentifierException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        identifier.IdentifierServiceTest.generateIdentifierByOrganInfoResponse generateIdentifierByOrganInfo(identifier.IdentifierServiceTest.generateIdentifierByOrganInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.generateIdentifierByOrganInfoResponse> generateIdentifierByOrganInfoAsync(identifier.IdentifierServiceTest.generateIdentifierByOrganInfo request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.IdentifierNotFoundException), Action="", Name="IdentifierNotFoundException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        identifier.IdentifierServiceTest.isEffectiveIdentifierResponse isEffectiveIdentifier(identifier.IdentifierServiceTest.isEffectiveIdentifier request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isEffectiveIdentifierResponse> isEffectiveIdentifierAsync(identifier.IdentifierServiceTest.isEffectiveIdentifier request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        identifier.IdentifierServiceTest.isExistIdentifierResponse isExistIdentifier(identifier.IdentifierServiceTest.isExistIdentifier request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isExistIdentifierResponse> isExistIdentifierAsync(identifier.IdentifierServiceTest.isExistIdentifier request);
        
        // CODEGEN: Parameter 'credential' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.PasswordIsNotStrongException), Action="", Name="PasswordIsNotStrongException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UnableToAuthenticateException), Action="", Name="UnableToAuthenticateException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.InvalidCredentialException), Action="", Name="InvalidCredentialException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.IdentifierNotFoundException), Action="", Name="IdentifierNotFoundException")]
        [System.ServiceModel.FaultContractAttribute(typeof(identifier.IdentifierServiceTest.UserTemporarilySuspendedException), Action="", Name="UserTemporarilySuspendedException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        identifier.IdentifierServiceTest.removeIdentifierResponse removeIdentifier(identifier.IdentifierServiceTest.removeIdentifier request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.removeIdentifierResponse> removeIdentifierAsync(identifier.IdentifierServiceTest.removeIdentifier request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isVerhoeff", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class isVerhoeff {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.isVerhoeffRequest IsVerhoeffRequest;
        
        public isVerhoeff() {
        }
        
        public isVerhoeff(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.isVerhoeffRequest IsVerhoeffRequest) {
            this.credential = credential;
            this.IsVerhoeffRequest = IsVerhoeffRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isVerhoeffResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class isVerhoeffResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool @return;
        
        public isVerhoeffResponse() {
        }
        
        public isVerhoeffResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class batchIdentifierInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private identifierAmountPair[] identifierAmountPairListField;
        
        private string toDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("identifierAmountPairList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=1)]
        public identifierAmountPair[] identifierAmountPairList {
            get {
                return this.identifierAmountPairListField;
            }
            set {
                this.identifierAmountPairListField = value;
                this.RaisePropertyChanged("identifierAmountPairList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string toDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
                this.RaisePropertyChanged("toDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class identifierAmountPair : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal amountField;
        
        private bool amountFieldSpecified;
        
        private string identifierField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
                this.RaisePropertyChanged("amountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
                this.RaisePropertyChanged("identifier");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class identifierResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal amountField;
        
        private bool amountFieldSpecified;
        
        private string descriptionField;
        
        private string identifierField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
                this.RaisePropertyChanged("amountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
                this.RaisePropertyChanged("identifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public bool result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addIdentifiers", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class addIdentifiers {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.batchIdentifierInfo batchIdentifierInfo;
        
        public addIdentifiers() {
        }
        
        public addIdentifiers(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.batchIdentifierInfo batchIdentifierInfo) {
            this.credential = credential;
            this.batchIdentifierInfo = batchIdentifierInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addIdentifiersResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class addIdentifiersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.identifierResult[] @return;
        
        public addIdentifiersResponse() {
        }
        
        public addIdentifiersResponse(identifier.IdentifierServiceTest.identifierResult[] @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class generateIdentifierRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal amountField;
        
        private bool amountFieldSpecified;
        
        private string identifierBodyField;
        
        private string identifierPrefixField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
                this.RaisePropertyChanged("amountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string identifierBody {
            get {
                return this.identifierBodyField;
            }
            set {
                this.identifierBodyField = value;
                this.RaisePropertyChanged("identifierBody");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string identifierPrefix {
            get {
                return this.identifierPrefixField;
            }
            set {
                this.identifierPrefixField = value;
                this.RaisePropertyChanged("identifierPrefix");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="generateIdentifier", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class generateIdentifier {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.generateIdentifierRequest generateIdentifierRequest;
        
        public generateIdentifier() {
        }
        
        public generateIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.generateIdentifierRequest generateIdentifierRequest) {
            this.credential = credential;
            this.generateIdentifierRequest = generateIdentifierRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="generateIdentifierResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class generateIdentifierResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
        
        public generateIdentifierResponse() {
        }
        
        public generateIdentifierResponse(string @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class batchIdentifierRemoveInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private string[] identifierCodeListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("identifierCodeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=1)]
        public string[] identifierCodeList {
            get {
                return this.identifierCodeListField;
            }
            set {
                this.identifierCodeListField = value;
                this.RaisePropertyChanged("identifierCodeList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class identifierRemoveResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string descriptionField;
        
        private string identifierField;
        
        private bool resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
                this.RaisePropertyChanged("identifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public bool result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeIdentifiers", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class removeIdentifiers {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.batchIdentifierRemoveInfo batchIdentifierRemoveInfo;
        
        public removeIdentifiers() {
        }
        
        public removeIdentifiers(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.batchIdentifierRemoveInfo batchIdentifierRemoveInfo) {
            this.credential = credential;
            this.batchIdentifierRemoveInfo = batchIdentifierRemoveInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeIdentifiersResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class removeIdentifiersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.identifierRemoveResult[] @return;
        
        public removeIdentifiersResponse() {
        }
        
        public removeIdentifiersResponse(identifier.IdentifierServiceTest.identifierRemoveResult[] @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class accountInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class identifierDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private bool activeField;
        
        private decimal amountField;
        
        private bool amountFieldSpecified;
        
        private string endDateField;
        
        private string identifierField;
        
        private string lastUpdateField;
        
        private string startDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("active");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
                this.RaisePropertyChanged("amountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("endDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
                this.RaisePropertyChanged("identifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string lastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
                this.RaisePropertyChanged("lastUpdate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("startDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getActiveIdentifiers", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getActiveIdentifiers {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.accountInfo accountInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startShamsiDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endShamsiDate;
        
        public getActiveIdentifiers() {
        }
        
        public getActiveIdentifiers(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountInfo accountInfo, string startShamsiDate, string endShamsiDate) {
            this.credential = credential;
            this.accountInfo = accountInfo;
            this.startShamsiDate = startShamsiDate;
            this.endShamsiDate = endShamsiDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getActiveIdentifiersResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class getActiveIdentifiersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.identifierDetail[] @return;
        
        public getActiveIdentifiersResponse() {
        }
        
        public getActiveIdentifiersResponse(identifier.IdentifierServiceTest.identifierDetail[] @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class accountIdentifierInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private string identifierCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string identifierCode {
            get {
                return this.identifierCodeField;
            }
            set {
                this.identifierCodeField = value;
                this.RaisePropertyChanged("identifierCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isValidIdentifier", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class isValidIdentifier {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal transactionAmount;
        
        public isValidIdentifier() {
        }
        
        public isValidIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo, decimal transactionAmount) {
            this.credential = credential;
            this.accountIdentifierInfo = accountIdentifierInfo;
            this.transactionAmount = transactionAmount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isValidIdentifierResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class isValidIdentifierResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool @return;
        
        public isValidIdentifierResponse() {
        }
        
        public isValidIdentifierResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class identifierInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private decimal amountField;
        
        private bool amountFieldSpecified;
        
        private string identifierField;
        
        private string toDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
                this.RaisePropertyChanged("amountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
                this.RaisePropertyChanged("identifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string toDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
                this.RaisePropertyChanged("toDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addIdentifier", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class addIdentifier {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.identifierInfo identifierInfo;
        
        public addIdentifier() {
        }
        
        public addIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.identifierInfo identifierInfo) {
            this.credential = credential;
            this.identifierInfo = identifierInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addIdentifierResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class addIdentifierResponse {
        
        public addIdentifierResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class generateIdentifierByOrganRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal amountField;
        
        private bool amountFieldSpecified;
        
        private identifierParts identifierPartsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public decimal amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
                this.RaisePropertyChanged("amountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public identifierParts identifierParts {
            get {
                return this.identifierPartsField;
            }
            set {
                this.identifierPartsField = value;
                this.RaisePropertyChanged("identifierParts");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.misc.bis.behdad.service")]
    public partial class identifierParts : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string baseCodeField;
        
        private string identifierPrefixField;
        
        private string incomeIndexCodeField;
        
        private string incomeSubsidiaryCodeField;
        
        private string organCustomCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string baseCode {
            get {
                return this.baseCodeField;
            }
            set {
                this.baseCodeField = value;
                this.RaisePropertyChanged("baseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string identifierPrefix {
            get {
                return this.identifierPrefixField;
            }
            set {
                this.identifierPrefixField = value;
                this.RaisePropertyChanged("identifierPrefix");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string incomeIndexCode {
            get {
                return this.incomeIndexCodeField;
            }
            set {
                this.incomeIndexCodeField = value;
                this.RaisePropertyChanged("incomeIndexCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string incomeSubsidiaryCode {
            get {
                return this.incomeSubsidiaryCodeField;
            }
            set {
                this.incomeSubsidiaryCodeField = value;
                this.RaisePropertyChanged("incomeSubsidiaryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string organCustomCode {
            get {
                return this.organCustomCodeField;
            }
            set {
                this.organCustomCodeField = value;
                this.RaisePropertyChanged("organCustomCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="generateIdentifierByOrganInfo", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class generateIdentifierByOrganInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.generateIdentifierByOrganRequest generateIdentifierByOrganRequest;
        
        public generateIdentifierByOrganInfo() {
        }
        
        public generateIdentifierByOrganInfo(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.generateIdentifierByOrganRequest generateIdentifierByOrganRequest) {
            this.credential = credential;
            this.generateIdentifierByOrganRequest = generateIdentifierByOrganRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="generateIdentifierByOrganInfoResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class generateIdentifierByOrganInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
        
        public generateIdentifierByOrganInfoResponse() {
        }
        
        public generateIdentifierByOrganInfoResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isEffectiveIdentifier", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class isEffectiveIdentifier {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo;
        
        public isEffectiveIdentifier() {
        }
        
        public isEffectiveIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo) {
            this.credential = credential;
            this.accountIdentifierInfo = accountIdentifierInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isEffectiveIdentifierResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class isEffectiveIdentifierResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool @return;
        
        public isEffectiveIdentifierResponse() {
        }
        
        public isEffectiveIdentifierResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isExistIdentifier", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class isExistIdentifier {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo;
        
        public isExistIdentifier() {
        }
        
        public isExistIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo) {
            this.credential = credential;
            this.accountIdentifierInfo = accountIdentifierInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isExistIdentifierResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class isExistIdentifierResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool @return;
        
        public isExistIdentifierResponse() {
        }
        
        public isExistIdentifierResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeIdentifier", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class removeIdentifier {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.credential credential;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="com.misc.bis.behdad.service", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo;
        
        public removeIdentifier() {
        }
        
        public removeIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo) {
            this.credential = credential;
            this.accountIdentifierInfo = accountIdentifierInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeIdentifierResponse", WrapperNamespace="com.misc.bis.behdad.service", IsWrapped=true)]
    public partial class removeIdentifierResponse {
        
        public removeIdentifierResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IdentifierServiceChannel : identifier.IdentifierServiceTest.IdentifierService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IdentifierServiceClient : System.ServiceModel.ClientBase<identifier.IdentifierServiceTest.IdentifierService>, identifier.IdentifierServiceTest.IdentifierService {
        
        public IdentifierServiceClient() {
        }
        
        public IdentifierServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IdentifierServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdentifierServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdentifierServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.isVerhoeffResponse identifier.IdentifierServiceTest.IdentifierService.isVerhoeff(identifier.IdentifierServiceTest.isVerhoeff request) {
            return base.Channel.isVerhoeff(request);
        }
        
        public bool isVerhoeff(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.isVerhoeffRequest IsVerhoeffRequest) {
            identifier.IdentifierServiceTest.isVerhoeff inValue = new identifier.IdentifierServiceTest.isVerhoeff();
            inValue.credential = credential;
            inValue.IsVerhoeffRequest = IsVerhoeffRequest;
            identifier.IdentifierServiceTest.isVerhoeffResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).isVerhoeff(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isVerhoeffResponse> identifier.IdentifierServiceTest.IdentifierService.isVerhoeffAsync(identifier.IdentifierServiceTest.isVerhoeff request) {
            return base.Channel.isVerhoeffAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isVerhoeffResponse> isVerhoeffAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.isVerhoeffRequest IsVerhoeffRequest) {
            identifier.IdentifierServiceTest.isVerhoeff inValue = new identifier.IdentifierServiceTest.isVerhoeff();
            inValue.credential = credential;
            inValue.IsVerhoeffRequest = IsVerhoeffRequest;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).isVerhoeffAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.addIdentifiersResponse identifier.IdentifierServiceTest.IdentifierService.addIdentifiers(identifier.IdentifierServiceTest.addIdentifiers request) {
            return base.Channel.addIdentifiers(request);
        }
        
        public identifier.IdentifierServiceTest.identifierResult[] addIdentifiers(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.batchIdentifierInfo batchIdentifierInfo) {
            identifier.IdentifierServiceTest.addIdentifiers inValue = new identifier.IdentifierServiceTest.addIdentifiers();
            inValue.credential = credential;
            inValue.batchIdentifierInfo = batchIdentifierInfo;
            identifier.IdentifierServiceTest.addIdentifiersResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).addIdentifiers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.addIdentifiersResponse> identifier.IdentifierServiceTest.IdentifierService.addIdentifiersAsync(identifier.IdentifierServiceTest.addIdentifiers request) {
            return base.Channel.addIdentifiersAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.addIdentifiersResponse> addIdentifiersAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.batchIdentifierInfo batchIdentifierInfo) {
            identifier.IdentifierServiceTest.addIdentifiers inValue = new identifier.IdentifierServiceTest.addIdentifiers();
            inValue.credential = credential;
            inValue.batchIdentifierInfo = batchIdentifierInfo;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).addIdentifiersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.generateIdentifierResponse identifier.IdentifierServiceTest.IdentifierService.generateIdentifier(identifier.IdentifierServiceTest.generateIdentifier request) {
            return base.Channel.generateIdentifier(request);
        }
        
        public string generateIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.generateIdentifierRequest generateIdentifierRequest) {
            identifier.IdentifierServiceTest.generateIdentifier inValue = new identifier.IdentifierServiceTest.generateIdentifier();
            inValue.credential = credential;
            inValue.generateIdentifierRequest = generateIdentifierRequest;
            identifier.IdentifierServiceTest.generateIdentifierResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).generateIdentifier(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.generateIdentifierResponse> identifier.IdentifierServiceTest.IdentifierService.generateIdentifierAsync(identifier.IdentifierServiceTest.generateIdentifier request) {
            return base.Channel.generateIdentifierAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.generateIdentifierResponse> generateIdentifierAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.generateIdentifierRequest generateIdentifierRequest) {
            identifier.IdentifierServiceTest.generateIdentifier inValue = new identifier.IdentifierServiceTest.generateIdentifier();
            inValue.credential = credential;
            inValue.generateIdentifierRequest = generateIdentifierRequest;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).generateIdentifierAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.removeIdentifiersResponse identifier.IdentifierServiceTest.IdentifierService.removeIdentifiers(identifier.IdentifierServiceTest.removeIdentifiers request) {
            return base.Channel.removeIdentifiers(request);
        }
        
        public identifier.IdentifierServiceTest.identifierRemoveResult[] removeIdentifiers(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.batchIdentifierRemoveInfo batchIdentifierRemoveInfo) {
            identifier.IdentifierServiceTest.removeIdentifiers inValue = new identifier.IdentifierServiceTest.removeIdentifiers();
            inValue.credential = credential;
            inValue.batchIdentifierRemoveInfo = batchIdentifierRemoveInfo;
            identifier.IdentifierServiceTest.removeIdentifiersResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).removeIdentifiers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.removeIdentifiersResponse> identifier.IdentifierServiceTest.IdentifierService.removeIdentifiersAsync(identifier.IdentifierServiceTest.removeIdentifiers request) {
            return base.Channel.removeIdentifiersAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.removeIdentifiersResponse> removeIdentifiersAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.batchIdentifierRemoveInfo batchIdentifierRemoveInfo) {
            identifier.IdentifierServiceTest.removeIdentifiers inValue = new identifier.IdentifierServiceTest.removeIdentifiers();
            inValue.credential = credential;
            inValue.batchIdentifierRemoveInfo = batchIdentifierRemoveInfo;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).removeIdentifiersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.getActiveIdentifiersResponse identifier.IdentifierServiceTest.IdentifierService.getActiveIdentifiers(identifier.IdentifierServiceTest.getActiveIdentifiers request) {
            return base.Channel.getActiveIdentifiers(request);
        }
        
        public identifier.IdentifierServiceTest.identifierDetail[] getActiveIdentifiers(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountInfo accountInfo, string startShamsiDate, string endShamsiDate) {
            identifier.IdentifierServiceTest.getActiveIdentifiers inValue = new identifier.IdentifierServiceTest.getActiveIdentifiers();
            inValue.credential = credential;
            inValue.accountInfo = accountInfo;
            inValue.startShamsiDate = startShamsiDate;
            inValue.endShamsiDate = endShamsiDate;
            identifier.IdentifierServiceTest.getActiveIdentifiersResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).getActiveIdentifiers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.getActiveIdentifiersResponse> identifier.IdentifierServiceTest.IdentifierService.getActiveIdentifiersAsync(identifier.IdentifierServiceTest.getActiveIdentifiers request) {
            return base.Channel.getActiveIdentifiersAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.getActiveIdentifiersResponse> getActiveIdentifiersAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountInfo accountInfo, string startShamsiDate, string endShamsiDate) {
            identifier.IdentifierServiceTest.getActiveIdentifiers inValue = new identifier.IdentifierServiceTest.getActiveIdentifiers();
            inValue.credential = credential;
            inValue.accountInfo = accountInfo;
            inValue.startShamsiDate = startShamsiDate;
            inValue.endShamsiDate = endShamsiDate;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).getActiveIdentifiersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.isValidIdentifierResponse identifier.IdentifierServiceTest.IdentifierService.isValidIdentifier(identifier.IdentifierServiceTest.isValidIdentifier request) {
            return base.Channel.isValidIdentifier(request);
        }
        
        public bool isValidIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo, decimal transactionAmount) {
            identifier.IdentifierServiceTest.isValidIdentifier inValue = new identifier.IdentifierServiceTest.isValidIdentifier();
            inValue.credential = credential;
            inValue.accountIdentifierInfo = accountIdentifierInfo;
            inValue.transactionAmount = transactionAmount;
            identifier.IdentifierServiceTest.isValidIdentifierResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).isValidIdentifier(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isValidIdentifierResponse> identifier.IdentifierServiceTest.IdentifierService.isValidIdentifierAsync(identifier.IdentifierServiceTest.isValidIdentifier request) {
            return base.Channel.isValidIdentifierAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isValidIdentifierResponse> isValidIdentifierAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo, decimal transactionAmount) {
            identifier.IdentifierServiceTest.isValidIdentifier inValue = new identifier.IdentifierServiceTest.isValidIdentifier();
            inValue.credential = credential;
            inValue.accountIdentifierInfo = accountIdentifierInfo;
            inValue.transactionAmount = transactionAmount;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).isValidIdentifierAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.addIdentifierResponse identifier.IdentifierServiceTest.IdentifierService.addIdentifier(identifier.IdentifierServiceTest.addIdentifier request) {
            return base.Channel.addIdentifier(request);
        }
        
        public void addIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.identifierInfo identifierInfo) {
            identifier.IdentifierServiceTest.addIdentifier inValue = new identifier.IdentifierServiceTest.addIdentifier();
            inValue.credential = credential;
            inValue.identifierInfo = identifierInfo;
            identifier.IdentifierServiceTest.addIdentifierResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).addIdentifier(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.addIdentifierResponse> identifier.IdentifierServiceTest.IdentifierService.addIdentifierAsync(identifier.IdentifierServiceTest.addIdentifier request) {
            return base.Channel.addIdentifierAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.addIdentifierResponse> addIdentifierAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.identifierInfo identifierInfo) {
            identifier.IdentifierServiceTest.addIdentifier inValue = new identifier.IdentifierServiceTest.addIdentifier();
            inValue.credential = credential;
            inValue.identifierInfo = identifierInfo;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).addIdentifierAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.generateIdentifierByOrganInfoResponse identifier.IdentifierServiceTest.IdentifierService.generateIdentifierByOrganInfo(identifier.IdentifierServiceTest.generateIdentifierByOrganInfo request) {
            return base.Channel.generateIdentifierByOrganInfo(request);
        }
        
        public string generateIdentifierByOrganInfo(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.generateIdentifierByOrganRequest generateIdentifierByOrganRequest) {
            identifier.IdentifierServiceTest.generateIdentifierByOrganInfo inValue = new identifier.IdentifierServiceTest.generateIdentifierByOrganInfo();
            inValue.credential = credential;
            inValue.generateIdentifierByOrganRequest = generateIdentifierByOrganRequest;
            identifier.IdentifierServiceTest.generateIdentifierByOrganInfoResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).generateIdentifierByOrganInfo(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.generateIdentifierByOrganInfoResponse> identifier.IdentifierServiceTest.IdentifierService.generateIdentifierByOrganInfoAsync(identifier.IdentifierServiceTest.generateIdentifierByOrganInfo request) {
            return base.Channel.generateIdentifierByOrganInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.generateIdentifierByOrganInfoResponse> generateIdentifierByOrganInfoAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.generateIdentifierByOrganRequest generateIdentifierByOrganRequest) {
            identifier.IdentifierServiceTest.generateIdentifierByOrganInfo inValue = new identifier.IdentifierServiceTest.generateIdentifierByOrganInfo();
            inValue.credential = credential;
            inValue.generateIdentifierByOrganRequest = generateIdentifierByOrganRequest;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).generateIdentifierByOrganInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.isEffectiveIdentifierResponse identifier.IdentifierServiceTest.IdentifierService.isEffectiveIdentifier(identifier.IdentifierServiceTest.isEffectiveIdentifier request) {
            return base.Channel.isEffectiveIdentifier(request);
        }
        
        public bool isEffectiveIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo) {
            identifier.IdentifierServiceTest.isEffectiveIdentifier inValue = new identifier.IdentifierServiceTest.isEffectiveIdentifier();
            inValue.credential = credential;
            inValue.accountIdentifierInfo = accountIdentifierInfo;
            identifier.IdentifierServiceTest.isEffectiveIdentifierResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).isEffectiveIdentifier(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isEffectiveIdentifierResponse> identifier.IdentifierServiceTest.IdentifierService.isEffectiveIdentifierAsync(identifier.IdentifierServiceTest.isEffectiveIdentifier request) {
            return base.Channel.isEffectiveIdentifierAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isEffectiveIdentifierResponse> isEffectiveIdentifierAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo) {
            identifier.IdentifierServiceTest.isEffectiveIdentifier inValue = new identifier.IdentifierServiceTest.isEffectiveIdentifier();
            inValue.credential = credential;
            inValue.accountIdentifierInfo = accountIdentifierInfo;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).isEffectiveIdentifierAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.isExistIdentifierResponse identifier.IdentifierServiceTest.IdentifierService.isExistIdentifier(identifier.IdentifierServiceTest.isExistIdentifier request) {
            return base.Channel.isExistIdentifier(request);
        }
        
        public bool isExistIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo) {
            identifier.IdentifierServiceTest.isExistIdentifier inValue = new identifier.IdentifierServiceTest.isExistIdentifier();
            inValue.credential = credential;
            inValue.accountIdentifierInfo = accountIdentifierInfo;
            identifier.IdentifierServiceTest.isExistIdentifierResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).isExistIdentifier(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isExistIdentifierResponse> identifier.IdentifierServiceTest.IdentifierService.isExistIdentifierAsync(identifier.IdentifierServiceTest.isExistIdentifier request) {
            return base.Channel.isExistIdentifierAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.isExistIdentifierResponse> isExistIdentifierAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo) {
            identifier.IdentifierServiceTest.isExistIdentifier inValue = new identifier.IdentifierServiceTest.isExistIdentifier();
            inValue.credential = credential;
            inValue.accountIdentifierInfo = accountIdentifierInfo;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).isExistIdentifierAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        identifier.IdentifierServiceTest.removeIdentifierResponse identifier.IdentifierServiceTest.IdentifierService.removeIdentifier(identifier.IdentifierServiceTest.removeIdentifier request) {
            return base.Channel.removeIdentifier(request);
        }
        
        public void removeIdentifier(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo) {
            identifier.IdentifierServiceTest.removeIdentifier inValue = new identifier.IdentifierServiceTest.removeIdentifier();
            inValue.credential = credential;
            inValue.accountIdentifierInfo = accountIdentifierInfo;
            identifier.IdentifierServiceTest.removeIdentifierResponse retVal = ((identifier.IdentifierServiceTest.IdentifierService)(this)).removeIdentifier(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<identifier.IdentifierServiceTest.removeIdentifierResponse> identifier.IdentifierServiceTest.IdentifierService.removeIdentifierAsync(identifier.IdentifierServiceTest.removeIdentifier request) {
            return base.Channel.removeIdentifierAsync(request);
        }
        
        public System.Threading.Tasks.Task<identifier.IdentifierServiceTest.removeIdentifierResponse> removeIdentifierAsync(identifier.IdentifierServiceTest.credential credential, identifier.IdentifierServiceTest.accountIdentifierInfo accountIdentifierInfo) {
            identifier.IdentifierServiceTest.removeIdentifier inValue = new identifier.IdentifierServiceTest.removeIdentifier();
            inValue.credential = credential;
            inValue.accountIdentifierInfo = accountIdentifierInfo;
            return ((identifier.IdentifierServiceTest.IdentifierService)(this)).removeIdentifierAsync(inValue);
        }
    }
}
